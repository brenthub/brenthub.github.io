<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Brent Blog</title>
  <subtitle>Read Think Verify Accept</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://brenthub.github.io/"/>
  <updated>2016-12-07T05:29:03.462Z</updated>
  <id>https://brenthub.github.io/</id>
  
  <author>
    <name>brent</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>systemctl命令</title>
    <link href="https://brenthub.github.io/2016/12/07/systemctl-command/"/>
    <id>https://brenthub.github.io/2016/12/07/systemctl-command/</id>
    <published>2016-12-07T09:03:15.000Z</published>
    <updated>2016-12-07T05:29:03.462Z</updated>
    
    <content type="html"><![CDATA[<p>Systemctl是一个systemd工具，主要负责控制systemd系统和服务管理器。<br>Systemd是一个系统管理守护进程、工具和库的集合，用于取代System V初始进程。Systemd的功能是用于集中管理和配置类UNIX系统。</p>
<p>Systemctl接受服务（.service），挂载点（.mount），套接口（.socket）和设备（.device）作为单元</p>
<h1 id="列出所有可用单元"><a href="#列出所有可用单元" class="headerlink" title="列出所有可用单元"></a>列出所有可用单元</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl list-unit-files</div></pre></td></tr></table></figure>
<h1 id="列出所有运行中单元"><a href="#列出所有运行中单元" class="headerlink" title="列出所有运行中单元"></a>列出所有运行中单元</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl list-units</div></pre></td></tr></table></figure>
<h1 id="列出所有失败单元"><a href="#列出所有失败单元" class="headerlink" title="列出所有失败单元"></a>列出所有失败单元</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl --failed -a</div></pre></td></tr></table></figure>
<h1 id="检查某个单元或服务是否运行"><a href="#检查某个单元或服务是否运行" class="headerlink" title="检查某个单元或服务是否运行"></a>检查某个单元或服务是否运行</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl status firewalld.service</div></pre></td></tr></table></figure>
<h1 id="列出所有服务（包括启用的和禁用的）"><a href="#列出所有服务（包括启用的和禁用的）" class="headerlink" title="列出所有服务（包括启用的和禁用的）"></a>列出所有服务（包括启用的和禁用的）</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl list-unit-files --type=service</div></pre></td></tr></table></figure>
<h1 id="启动、重启、停止、重载服务"><a href="#启动、重启、停止、重载服务" class="headerlink" title="启动、重启、停止、重载服务"></a>启动、重启、停止、重载服务</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># systemctl start httpd.service</div><div class="line"># systemctl restart httpd.service</div><div class="line"># systemctl stop httpd.service</div><div class="line"># systemctl reload httpd.service</div><div class="line"># systemctl status httpd.service</div></pre></td></tr></table></figure>
<h1 id="系统启动时自动启动服务"><a href="#系统启动时自动启动服务" class="headerlink" title="系统启动时自动启动服务"></a>系统启动时自动启动服务</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># systemctl is-active httpd.service</div><div class="line"># systemctl enable httpd.service</div><div class="line"># systemctl disable httpd.service</div></pre></td></tr></table></figure>
<h1 id="屏蔽（让它不能启动）或显示服务"><a href="#屏蔽（让它不能启动）或显示服务" class="headerlink" title="屏蔽（让它不能启动）或显示服务"></a>屏蔽（让它不能启动）或显示服务</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">systemctl mask httpd.service</div><div class="line">systemctl unmask httpd.service</div></pre></td></tr></table></figure>
<h1 id="检查某个服务的所有配置细节"><a href="#检查某个服务的所有配置细节" class="headerlink" title="检查某个服务的所有配置细节"></a>检查某个服务的所有配置细节</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl show httpd</div></pre></td></tr></table></figure>
<h1 id="分析某个服务（httpd）的关键链"><a href="#分析某个服务（httpd）的关键链" class="headerlink" title="分析某个服务（httpd）的关键链"></a>分析某个服务（httpd）的关键链</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemd-analyze critical-chain httpd.service</div></pre></td></tr></table></figure>
<h1 id="获取某个服务（httpd）的依赖性列表"><a href="#获取某个服务（httpd）的依赖性列表" class="headerlink" title="获取某个服务（httpd）的依赖性列表"></a>获取某个服务（httpd）的依赖性列表</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl list-dependencies httpd.service</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Systemctl是一个systemd工具，主要负责控制systemd系统和服务管理器。&lt;br&gt;Systemd是一个系统管理守护进程、工具和库的集合，用于取代System V初始进程。Systemd的功能是用于集中管理和配置类UNIX系统。&lt;/p&gt;
&lt;p&gt;Systemctl
    
    </summary>
    
      <category term="linux" scheme="https://brenthub.github.io/categories/linux/"/>
    
    
      <category term="linux" scheme="https://brenthub.github.io/tags/linux/"/>
    
      <category term="systemctl" scheme="https://brenthub.github.io/tags/systemctl/"/>
    
  </entry>
  
  <entry>
    <title>rpm安装mysql</title>
    <link href="https://brenthub.github.io/2016/10/12/rpm-install-mysql/"/>
    <id>https://brenthub.github.io/2016/10/12/rpm-install-mysql/</id>
    <published>2016-10-12T02:03:15.000Z</published>
    <updated>2016-12-07T05:19:02.946Z</updated>
    
    <content type="html"><![CDATA[<p>linux的下mysql安装有很多种方式，如rpm以及直接编译安装（时间太长），本文主要介绍Linux下rpm方式安装mysql的一些常用配置</p>
<h2 id="删除依赖"><a href="#删除依赖" class="headerlink" title="删除依赖"></a>删除依赖</h2><p>查看是否有安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rpm -qa | grep -i mysql</div></pre></td></tr></table></figure></p>
<p>当有其它依赖时需要删除（mysql-lib也算）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rpm -ev MySQL-lib</div></pre></td></tr></table></figure>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">rpm -ivh MySQL-server-5.1.72-1.glibc23.x86_64.rpm --nodeps</div><div class="line">rpm -ivh MySQL-client-5.1.72-1.glibc23.x86_64.rpm --nodeps</div><div class="line">rpm -ivh MySQL-devel-5.1.72-1.glibc23.x86_64.rpm --nodeps</div></pre></td></tr></table></figure>
<h2 id="查看是否安装成功"><a href="#查看是否安装成功" class="headerlink" title="查看是否安装成功"></a>查看是否安装成功</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">netstat -atln</div></pre></td></tr></table></figure>
<h2 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql [-u username] [-h host] [-p[password]] [dbname]</div></pre></td></tr></table></figure>
<h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><p>1、数据库目录<br>/var/lib/mysql/<br>2、配置文件<br>/usr/share/mysql   （mysql.server命令及配置文件）<br>3、相关命令<br>/usr/bin   (mysqladmin mysqldump等命令)<br>4、启动脚本<br>/etc/rc.d/init.d/   （启动脚本文件mysql的目录）</p>
<h2 id="修改登录密码"><a href="#修改登录密码" class="headerlink" title="修改登录密码"></a>修改登录密码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">usr/bin/mysqladmin -u root password &apos;root&apos;</div></pre></td></tr></table></figure>
<h2 id="启动与停止"><a href="#启动与停止" class="headerlink" title="启动与停止"></a>启动与停止</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">service mysql start</div><div class="line">service mysql restart</div><div class="line">service mysql stop</div></pre></td></tr></table></figure>
<h2 id="设置字符集"><a href="#设置字符集" class="headerlink" title="设置字符集"></a>设置字符集</h2><p>MySQL的默认编码是Latin1，不支持中文，要支持需要把数据库的默认编码修改为gbk或者utf8。<br>1.在/etc/下找到my.cnf，如果没有就把/usr/share/mysql目录下的my-medium.cnf复制到/etc/下并改名为my.cnf即可<br>2.打开my.cnf以后，在[client]和[mysqld]下面均加上default-character-set = utf8，保存并关闭<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">default-character-set = utf8</div></pre></td></tr></table></figure></p>
<p>3.重新启动MySQL服务</p>
<p>查询字符集<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">show</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">'%set%'</span>;</div></pre></td></tr></table></figure></p>
<h2 id="新增非本机访问root帐号"><a href="#新增非本机访问root帐号" class="headerlink" title="新增非本机访问root帐号"></a>新增非本机访问root帐号</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">GRANT</span> ALL <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> *.* <span class="keyword">TO</span> <span class="string">'root'</span>@<span class="string">'%'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'root'</span> <span class="keyword">WITH</span> <span class="keyword">GRANT</span> <span class="keyword">OPTION</span>;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;linux的下mysql安装有很多种方式，如rpm以及直接编译安装（时间太长），本文主要介绍Linux下rpm方式安装mysql的一些常用配置&lt;/p&gt;
&lt;h2 id=&quot;删除依赖&quot;&gt;&lt;a href=&quot;#删除依赖&quot; class=&quot;headerlink&quot; title=&quot;删除依赖&quot;
    
    </summary>
    
      <category term="database" scheme="https://brenthub.github.io/categories/database/"/>
    
    
      <category term="database" scheme="https://brenthub.github.io/tags/database/"/>
    
      <category term="mysql" scheme="https://brenthub.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>VMware网络模式及设置</title>
    <link href="https://brenthub.github.io/2016/08/23/vmware-network/"/>
    <id>https://brenthub.github.io/2016/08/23/vmware-network/</id>
    <published>2016-08-23T01:03:15.000Z</published>
    <updated>2016-12-07T05:19:02.961Z</updated>
    
    <content type="html"><![CDATA[<p>本章将介绍VMware三种网络模式bridged(桥接模式)、NAT(网络地址转换模式)和host-only(主机模式)的区别，以及在Centos中NAT模式的设置。</p>
<h2 id="模式介绍"><a href="#模式介绍" class="headerlink" title="模式介绍"></a>模式介绍</h2><h3 id="Bridged-模式"><a href="#Bridged-模式" class="headerlink" title="Bridged 模式"></a>Bridged 模式</h3><p>在桥接模式下，VMware虚拟机里的系统就像是 局域网 中的一台 独立 的主机，它可以访问同一个网段内任何一台机器，即可以相互ping通。</p>
<ul>
<li>使用场景<br>如果是用做服务器，网络ip是固定的，推荐使用这种方式。</li>
</ul>
<h3 id="NAT-模式"><a href="#NAT-模式" class="headerlink" title="NAT 模式"></a>NAT 模式</h3><p>NAT 即 Network Address Translation 缩写，即网络地址转换，由 NAT服务完成，在vmware里默认为VMnet8虚拟交换机，它将虚拟系统的IP地址转换成宿主机的IP地址，从而借用宿主机访问其他主机。使用NAT模式，也可以让虚拟系统通过宿主机器所在的网络来访问公网。</p>
<p>在这种模式下，虚拟系统是不能被LAN内其他PC访问的（宿主机可以），只能虚拟机以宿主机的名义访问LAN内的计算机。默认情况下NAT模式的虚拟系统的TCP/IP配置信息由VMnet8(NAT)虚拟网络的DHCP服务器提供，因此采用NAT模式最大的优势是虚拟系统接入互联网非常简单，你不需要进行任何其他的配置，只需要宿主机器能访问互联网即可。使用NAT方式时，宿主机（Windows）网络管理里会多出一块虚拟网卡，名为VMware Network Adepter VMnet8</p>
<ul>
<li>使用场景<br>如果网络ip不是固定的，比如笔记 本上搭建VM，ip不稳定，推荐这种方式。这样，无论网络ip怎么改变，虚拟机跟宿主机的ip是固定的。</li>
</ul>
<h3 id="host-only-模式"><a href="#host-only-模式" class="headerlink" title="host-only 模式"></a>host-only 模式</h3><p>在Host-Only模式下，虚拟系统所在的虚拟网络是一个全封闭的网络，它唯一能够访问的就是宿主机。其实Host-Only网络和NAT网络很相似，不同的地方就是Host-Only网络没有NAT服务，所以虚拟网络不能连接到Internet，即虚拟系统无法上网。</p>
<ul>
<li>使用场景<br>无法联网，封闭的网络环境使用</li>
</ul>
<h2 id="Centos中NAT模式的设置"><a href="#Centos中NAT模式的设置" class="headerlink" title="Centos中NAT模式的设置"></a>Centos中NAT模式的设置</h2><p>在自己学习的一般情况下，我们都使用NAT模式，故在这里着重介绍下Centos中NAT模式的设置</p>
<p>打开VM的虚拟网络编辑器<br><img src="https://cloud.githubusercontent.com/assets/10822807/17879899/02fc7ed6-6928-11e6-8833-5de599904db1.png" alt="image"></p>
<p>修改NAT模式的IP，网关，NDS（或采取默认）<br>如：我把网段设为30</p>
<h3 id="指定虚拟机静态ip"><a href="#指定虚拟机静态ip" class="headerlink" title="指定虚拟机静态ip"></a>指定虚拟机静态ip</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi /etc/sysconfig/network-scripts/ifcfg-eno0</div></pre></td></tr></table></figure>
<p>注：可能不叫ifcfg-eno0</p>
<p>修改为类似内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">BOOTPROTO=static</div><div class="line"></div><div class="line">ONBOOT=yes</div><div class="line">IPADDR=192.168.30.8</div><div class="line">NETMASK=255.255.255.0</div><div class="line">GATEWAY=192.168.30.1</div><div class="line">DNS1=192.168.30.1</div><div class="line">DNS2=114.114.114.114</div></pre></td></tr></table></figure></p>
<h3 id="修改主机名-可以不修改，只是为了标识"><a href="#修改主机名-可以不修改，只是为了标识" class="headerlink" title="修改主机名(可以不修改，只是为了标识)"></a>修改主机名(可以不修改，只是为了标识)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi /etc/sysconfig/network</div></pre></td></tr></table></figure>
<p>修改主机名称</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">HOSTNAME=hadoopNameNode</div></pre></td></tr></table></figure>
<ul>
<li>这个有什么用<br><img src="https://cloud.githubusercontent.com/assets/10822807/17880042/578dccb0-6929-11e6-8ae0-96bec4bc9d6d.png" alt="image"></li>
</ul>
<h3 id="重启网络服务"><a href="#重启网络服务" class="headerlink" title="重启网络服务"></a>重启网络服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service network restart</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本章将介绍VMware三种网络模式bridged(桥接模式)、NAT(网络地址转换模式)和host-only(主机模式)的区别，以及在Centos中NAT模式的设置。&lt;/p&gt;
&lt;h2 id=&quot;模式介绍&quot;&gt;&lt;a href=&quot;#模式介绍&quot; class=&quot;headerlink&quot; 
    
    </summary>
    
      <category term="server" scheme="https://brenthub.github.io/categories/server/"/>
    
    
      <category term="VMware" scheme="https://brenthub.github.io/tags/VMware/"/>
    
  </entry>
  
  <entry>
    <title>Maven如何引用第三方jar包</title>
    <link href="https://brenthub.github.io/2016/07/29/jar-deploy-nexus/"/>
    <id>https://brenthub.github.io/2016/07/29/jar-deploy-nexus/</id>
    <published>2016-07-29T02:03:15.000Z</published>
    <updated>2016-12-07T05:19:02.961Z</updated>
    
    <content type="html"><![CDATA[<p>在用maven管理项目时，当我们使用的第三方的jar包在Maven中央仓库没有下载，这个时候有两种解决办法，第一种是将jar包直接放在工程中，以指定systemPath来引用；另一种方法就是采用架设Nexus私服，通过将jar直接发布到私服上来解决引用问题。</p>
<h2 id="引用工程内的jar包"><a href="#引用工程内的jar包" class="headerlink" title="引用工程内的jar包"></a>引用工程内的jar包</h2><p>举个最常见的例子就是ojdbc的引用，maven中央仓库是没有下载，采用本地引用的配置如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ojdbc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ojdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>14<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">scope</span>&gt;</span>system<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">systemPath</span>&gt;</span>$&#123;project.basedir&#125;/lib/ojdbc14.jar<span class="tag">&lt;/<span class="name">systemPath</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>注意：</p>
<ul>
<li>systemPath必须是具体的jar，而不是jar所在目录.</li>
<li>groupId, artifactId, version 必须设置，否则pom语法出错</li>
<li>scope必须是system，当为system的时候maven将从systemPath中查找所需jar包，而不是从repository.</li>
<li>虽然jar包的名字叫ojdbc14.jar，但打出来的包命名规则是artifactId-version.jar</li>
</ul>
<h2 id="Nexus引用"><a href="#Nexus引用" class="headerlink" title="Nexus引用"></a>Nexus引用</h2><p>使用Nexus私服不仅可以管理第三方jar的发布，还可以发布自己项目中的组件，还有另外的好处就是可以节省外网带宽，加快下载速度。</p>
<h3 id="Nexus搭建"><a href="#Nexus搭建" class="headerlink" title="Nexus搭建"></a>Nexus搭建</h3><p>网上很多教程，这里不再重复了</p>
<h3 id="创建deploy用户"><a href="#创建deploy用户" class="headerlink" title="创建deploy用户"></a>创建deploy用户</h3><p>在nexus上创建一个专门deploy jar包的用户</p>
<h3 id="修改本地maven配置，配置发布帐号"><a href="#修改本地maven配置，配置发布帐号" class="headerlink" title="修改本地maven配置，配置发布帐号"></a>修改本地maven配置，配置发布帐号</h3><p>比如，我创建一个用户叫deploy,在配置文件中新增以下配置：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">servers</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">server</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">id</span>&gt;</span>xxxx-releases<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">username</span>&gt;</span>deploy<span class="tag">&lt;/<span class="name">username</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">password</span>&gt;</span>xxxx<span class="tag">&lt;/<span class="name">password</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">server</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">servers</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="工程pom或者maven-settings-xml中配置仓库引用"><a href="#工程pom或者maven-settings-xml中配置仓库引用" class="headerlink" title="工程pom或者maven settings.xml中配置仓库引用"></a>工程pom或者maven settings.xml中配置仓库引用</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">repositories</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">repository</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">id</span>&gt;</span>xxxx-nexus<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">name</span>&gt;</span>xxxx nexus Repository<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">url</span>&gt;</span>http://10.19.1.22/nexus/content/groups/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">repository</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">repository</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">id</span>&gt;</span>xxxx-thirdparty<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">name</span>&gt;</span>xxxx thirdparty Repository<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">url</span>&gt;</span>http://10.19.1.22/nexus/content/repositories/thirdparty/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">repository</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">repository</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">id</span>&gt;</span>xxxx-releases<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">name</span>&gt;</span>xxxx Release Repository<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">url</span>&gt;</span>http://10.19.1.22/nexus/content/repositories/releases/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">repository</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">repository</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">id</span>&gt;</span>xxxx-snapshots<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">name</span>&gt;</span>xxxx Snapshot Repository<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">url</span>&gt;</span>http://10.19.1.22/nexus/content/repositories/snapshots/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">repository</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="deploy第三方jar包"><a href="#deploy第三方jar包" class="headerlink" title="deploy第三方jar包"></a>deploy第三方jar包</h3><p>最常规的做法是执行maven deploy命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mvn deploy:deploy-file -DgroupId=com.xxx -DartifactId=yyyy -Dversion=1.0.1 -Dpackaging=jar -Dfile=D:\User\Desktop\xxxx.jar -Durl=http://10.19.1.22/nexus/content/repositories/thirdparty/ -DrepositoryId=xxxx-releases</div></pre></td></tr></table></figure></p>
<p>注意：</p>
<ul>
<li>命令中的repositoryId参数值要和上面server配置中的id要对应</li>
<li>url表示要发布的私服仓库地址，可以发布到thirdparty，也可以直接发到releases中</li>
</ul>
<h3 id="使用脚本来发布jar包"><a href="#使用脚本来发布jar包" class="headerlink" title="使用脚本来发布jar包"></a>使用脚本来发布jar包</h3><p>使用命令行感觉太麻烦，为此我写了一个bat脚本，通过jar包重命名成一定规则名字来完成发布，脚本如下：<br><figure class="highlight bat"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">@<span class="built_in">echo</span> off</div><div class="line"><span class="built_in">setlocal</span> enabledelayedexpansion</div><div class="line"></div><div class="line"><span class="built_in">set</span> tpath=%<span class="number">1</span></div><div class="line"></div><div class="line"><span class="keyword">for</span> /f  <span class="variable">%%i</span> <span class="keyword">in</span> ("<span class="variable">%tpath%</span>") <span class="keyword">do</span> (</div><div class="line">	<span class="built_in">set</span> tname=<span class="variable">%%~</span>ni</div><div class="line">)</div><div class="line"></div><div class="line"><span class="keyword">for</span> /f "delims=- tokens=<span class="number">1</span>,*" <span class="variable">%%i</span> <span class="keyword">in</span> ("<span class="variable">%tname%</span>") <span class="keyword">do</span> (</div><div class="line">	<span class="built_in">set</span> jgroup=<span class="variable">%%i</span></div><div class="line">)</div><div class="line"></div><div class="line"><span class="keyword">for</span> /f "delims=- tokens=<span class="number">2</span>,*" <span class="variable">%%i</span> <span class="keyword">in</span> ("<span class="variable">%tname%</span>") <span class="keyword">do</span> (</div><div class="line">	<span class="built_in">set</span> jname=<span class="variable">%%i</span></div><div class="line">)</div><div class="line"></div><div class="line"><span class="keyword">for</span> /f "delims=- tokens=<span class="number">3</span>,*" <span class="variable">%%i</span> <span class="keyword">in</span> ("<span class="variable">%tname%</span>") <span class="keyword">do</span> (</div><div class="line">	<span class="built_in">set</span> jversion=<span class="variable">%%i</span></div><div class="line">)</div><div class="line"></div><div class="line"><span class="built_in">echo</span> 即将执行以下命令，请核对，确认请按<span class="number">1</span></div><div class="line"><span class="built_in">echo</span> mvn deploy:deploy-file -DgroupId=<span class="variable">%jgroup%</span> -DartifactId=<span class="variable">%jname%</span> -Dversion=<span class="variable">%jversion%</span> -Dpackaging=jar -Dfile=<span class="variable">%tpath%</span> -Durl=http://<span class="number">10</span>.<span class="number">19</span>.<span class="number">1</span>.<span class="number">22</span>/nexus/content/repositories/releases/  -DrepositoryId=xxxx-releases</div><div class="line"><span class="built_in">set</span> /p var=是否确认：</div><div class="line"><span class="keyword">if</span> <span class="variable">%var%</span>==<span class="number">1</span> (</div><div class="line">	<span class="built_in">echo</span> deploy jar to Nexus 开始...</div><div class="line">	mvn deploy:deploy-file -DgroupId=<span class="variable">%jgroup%</span> -DartifactId=<span class="variable">%jname%</span> -Dversion=<span class="variable">%jversion%</span> -Dpackaging=jar -Dfile=<span class="variable">%tpath%</span> -Durl=http://<span class="number">10</span>.<span class="number">19</span>.<span class="number">1</span>.<span class="number">22</span>/nexus/content/repositories/releases/ -DrepositoryId=xxxx-releases &gt;deploy.log</div><div class="line">	<span class="built_in">echo</span> deploy jar to Nexus 结束...</div><div class="line">)<span class="keyword">else</span> (</div><div class="line">	<span class="built_in">echo</span> 取消命令，按任意键退出</div><div class="line">)</div><div class="line"><span class="built_in">pause</span></div></pre></td></tr></table></figure></p>
<p>将代码复制到新建文件depoly.bat中。</p>
<p>我们将jar包重命名成groupId-artifactId-version.jar之后，直接拖到deploy.bat上，按1确认后会在当前目录中生成deploy.log日志。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在用maven管理项目时，当我们使用的第三方的jar包在Maven中央仓库没有下载，这个时候有两种解决办法，第一种是将jar包直接放在工程中，以指定systemPath来引用；另一种方法就是采用架设Nexus私服，通过将jar直接发布到私服上来解决引用问题。&lt;/p&gt;
&lt;h2
    
    </summary>
    
      <category term="maven" scheme="https://brenthub.github.io/categories/maven/"/>
    
    
      <category term="cmd" scheme="https://brenthub.github.io/tags/cmd/"/>
    
      <category term="maven" scheme="https://brenthub.github.io/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>PLSQL使用调优手册</title>
    <link href="https://brenthub.github.io/2016/07/28/plsql-use-optimize/"/>
    <id>https://brenthub.github.io/2016/07/28/plsql-use-optimize/</id>
    <published>2016-07-28T02:03:15.000Z</published>
    <updated>2016-12-07T05:19:02.961Z</updated>
    
    <content type="html"><![CDATA[<p>PL/SQL Developer是一个集成开发环境，专门面向Oracle数据库存储程序单元的开发，为了提高工作效率和个性化配置，在此列举一些常用的调优配置。</p>
<h2 id="运行环境"><a href="#运行环境" class="headerlink" title="运行环境"></a>运行环境</h2><p>PL/SQL是以oracle客户端为基础运行的，故运行PL/SQL需要安装Oracle服务端（可不用创建实例）或者Oracle瘦客户端（部分功能将不可用，如表的导入导出）。</p>
<h3 id="Oracle瘦客户端安装"><a href="#Oracle瘦客户端安装" class="headerlink" title="Oracle瘦客户端安装"></a>Oracle瘦客户端安装</h3><ul>
<li>下载瘦客户端（略）</li>
<li>将解压之后的瘦客户端地址加入系统环境变量，如D:\Program Files\instantclient_10_2</li>
<li>添加新的环境变量：变量名：NLS_LANG 值：AMERICAN_AMERICA.ZHS16GBK</li>
</ul>
<h3 id="Oracle服务端安装"><a href="#Oracle服务端安装" class="headerlink" title="Oracle服务端安装"></a>Oracle服务端安装</h3><ul>
<li>服务端下载安装（略）</li>
<li>安装的时候可不用安装实例<br><img src="https://cloud.githubusercontent.com/assets/10822807/17198882/4b8cf16c-54ab-11e6-8fc8-8fbfda37a4d2.png" alt="image"></li>
</ul>
<h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><ul>
<li>当环境准备好之后就可以运行PL\SQL了，推荐使用9.0以上的版本。</li>
<li>可以在Database直接填写ip/实例名，如<br><img src="https://cloud.githubusercontent.com/assets/10822807/17198919/96aff0a4-54ab-11e6-904e-6a5ccc9f3060.png" alt="image"></li>
</ul>
<h2 id="调优"><a href="#调优" class="headerlink" title="调优"></a>调优</h2><h3 id="调整布局"><a href="#调整布局" class="headerlink" title="调整布局"></a>调整布局</h3><p>登录进去，推荐将其它组件都关闭，只保留Objects组件，这个我们用到最多，其它的都没怎么用到，可以按自己习惯调整。如<br><img src="https://cloud.githubusercontent.com/assets/10822807/17198935/c532999a-54ab-11e6-9dd6-e4c5eb8eeb4b.png" alt="image"><br>再点击菜单Window-》Save Layout 将适合自己的布局保存，如<br><img src="https://cloud.githubusercontent.com/assets/10822807/17198946/dadc6da2-54ab-11e6-9339-5355c96f451f.png" alt="image"></p>
<h3 id="标记表和视图并排序"><a href="#标记表和视图并排序" class="headerlink" title="标记表和视图并排序"></a>标记表和视图并排序</h3><p>点击菜单Tools-》Object Browser Folders，如<br><img src="https://cloud.githubusercontent.com/assets/10822807/17198955/f124c014-54ab-11e6-8e52-dd533abe6177.png" alt="image"><br>将Tables和Views文件夹移到前两位，并加其它颜色以区分<br><img src="https://cloud.githubusercontent.com/assets/10822807/17198967/ff53d3d2-54ab-11e6-95d3-c2d8c587f7be.png" alt="image"><br>调整效果如下：<br><img src="https://cloud.githubusercontent.com/assets/10822807/17198978/1217b790-54ac-11e6-94b3-6b5d390932f2.png" alt="image"></p>
<h3 id="登录之后默认选中My-Objects"><a href="#登录之后默认选中My-Objects" class="headerlink" title="登录之后默认选中My Objects"></a>登录之后默认选中My Objects</h3><p>默认登录只后，会列出All Objects，在实际运用中，我们只关心自己的对象。<br>点击菜单Tools-》Object Browser Filters，如<br><img src="https://cloud.githubusercontent.com/assets/10822807/17198993/2ed707f0-54ac-11e6-95a3-d59795c43d05.png" alt="image"><br>选中My Object并勾上Default<br><img src="https://cloud.githubusercontent.com/assets/10822807/17199004/44130bc8-54ac-11e6-906b-212f88d0b75d.png" alt="image"><br>最终效果如下：<br><img src="https://cloud.githubusercontent.com/assets/10822807/17199016/54f1fac6-54ac-11e6-885a-f433edf66abb.png" alt="image"></p>
<h3 id="记住密码"><a href="#记住密码" class="headerlink" title="记住密码"></a>记住密码</h3><p>点击菜单Tools –&gt; Preferences –&gt; Oracle –&gt; Logon History –&gt; Store With Password<br><img src="https://cloud.githubusercontent.com/assets/10822807/17199039/863d3ed8-54ac-11e6-95a9-30a74d6c9427.png" alt="image"></p>
<h3 id="双击显示表数据"><a href="#双击显示表数据" class="headerlink" title="双击显示表数据"></a>双击显示表数据</h3><p>点击菜单Preferences –&gt; User Interface –&gt;Object Browser –&gt; Object Type<br><img src="https://cloud.githubusercontent.com/assets/10822807/17199060/ab5e0f80-54ac-11e6-90bc-696d373d440c.png" alt="image"><br>选中Table 将双击改成查询数据<br>对于视图也可以做一样的设置</p>
<h3 id="SQL语句字符全部大写"><a href="#SQL语句字符全部大写" class="headerlink" title="SQL语句字符全部大写"></a>SQL语句字符全部大写</h3><p>references –&gt; User Interface –&gt; Editor –&gt; Keyword Case –&gt; Uppercase<br><img src="https://cloud.githubusercontent.com/assets/10822807/17199070/c923cc44-54ac-11e6-84e7-1119bd0c9bd4.png" alt="image"></p>
<h3 id="自动替换"><a href="#自动替换" class="headerlink" title="自动替换"></a>自动替换</h3><p>Preferences –&gt; User Interface –&gt; Editor –&gt; AutoReplace<br><img src="https://cloud.githubusercontent.com/assets/10822807/17199085/e4b415d6-54ac-11e6-8407-316c5b55b3a6.png" alt="image"><br>这样我们就可输入sf空格，工作会将自动替换SELECT * FROM<br>可以根据习惯定义其它的规则<br>如s=SELECT等等</p>
<h3 id="自定义快捷键"><a href="#自定义快捷键" class="headerlink" title="自定义快捷键"></a>自定义快捷键</h3><p>PLSQL Developer里预留了很多键让用户自定义，通常情况下，打开PLSQL Developer后，最经常干的事就是打开SQL Window和Command Window，就给这两个操作定义了快捷键，ALT+S和ALT+ C，这样拿鼠标点三下的事情只需要按一下键。<br>设置方法：菜单Preferences –&gt; User Interface –&gt; Key Configuration<br><img src="https://cloud.githubusercontent.com/assets/10822807/17199113/0ec7bb8e-54ad-11e6-9242-2da28a330cca.png" alt="image"></p>
<h3 id="显示行数"><a href="#显示行数" class="headerlink" title="显示行数"></a>显示行数</h3><p>Preferences –&gt; Window Types –&gt;SQLＷindow –&gt;show gutter<br><img src="https://cloud.githubusercontent.com/assets/10822807/17199122/2560b90e-54ad-11e6-9650-0dd92e716448.png" alt="image"><br>效果如：<br><img src="https://cloud.githubusercontent.com/assets/10822807/17199129/3467c74e-54ad-11e6-932c-c4383b2620f7.png" alt="image"></p>
<h3 id="根据光标位置自动选择语句"><a href="#根据光标位置自动选择语句" class="headerlink" title="根据光标位置自动选择语句"></a>根据光标位置自动选择语句</h3><p>Preferences –&gt; Window Types –&gt;SQLＷindow –&gt;AutoSelect statement<br><img src="https://cloud.githubusercontent.com/assets/10822807/17199144/4a1bfb64-54ad-11e6-9a51-6892c06bb718.png" alt="image"><br>注意，每条语句后面要加分号。</p>
<h3 id="管理你的sql文件"><a href="#管理你的sql文件" class="headerlink" title="管理你的sql文件"></a>管理你的sql文件</h3><p>点击菜单Tools-》File Browser Locations，如<br><img src="https://cloud.githubusercontent.com/assets/10822807/17199157/60a25d74-54ad-11e6-953e-231c40cd5644.png" alt="image"><br>定义一个文件保存目录如下图：<br><img src="https://cloud.githubusercontent.com/assets/10822807/17199160/70101de6-54ad-11e6-93b9-5b73f8008d45.png" alt="image"><br>并将普通的SQL文件保存默认保存这个文件下<br>Preferences –&gt; Files –&gt; Directories –&gt; SQL scripts<br><img src="https://cloud.githubusercontent.com/assets/10822807/17199170/8479e58c-54ad-11e6-8a04-4f71e253c8b4.png" alt="image"><br>使用效果如：<br><img src="https://cloud.githubusercontent.com/assets/10822807/17199180/94c9e5d6-54ad-11e6-8dc6-b2725005cac1.png" alt="image"></p>
<h3 id="快捷登录"><a href="#快捷登录" class="headerlink" title="快捷登录"></a>快捷登录</h3><p><img src="https://cloud.githubusercontent.com/assets/10822807/17199197/b130ead0-54ad-11e6-8845-667938450efe.png" alt="image"></p>
<p>最终效果：<br><img src="https://cloud.githubusercontent.com/assets/10822807/17199294/6ed9f8ba-54ae-11e6-8776-1f5e54e5484c.png" alt="image"></p>
<h3 id="字体大小调整"><a href="#字体大小调整" class="headerlink" title="字体大小调整"></a>字体大小调整</h3><p><img src="https://cloud.githubusercontent.com/assets/10822807/17199213/cad3732c-54ad-11e6-9231-cbd3c5c33fc3.png" alt="image"></p>
<p>最终效果：<br><img src="https://cloud.githubusercontent.com/assets/10822807/17199312/8e70ca3c-54ae-11e6-9ac0-b0ed36aa297d.png" alt="image"></p>
<h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="Win7系统下登录弹白框"><a href="#Win7系统下登录弹白框" class="headerlink" title="Win7系统下登录弹白框"></a>Win7系统下登录弹白框</h3><p>PL/SQL没有权限所致，找到plsqldev.exe右键-&gt;属性-&gt;兼容性-&gt;以管理员身份运行此程序。如下图：<br><img src="https://cloud.githubusercontent.com/assets/10822807/17199334/af97f500-54ae-11e6-97c5-5a3b89ca0cf4.png" alt="image"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;PL/SQL Developer是一个集成开发环境，专门面向Oracle数据库存储程序单元的开发，为了提高工作效率和个性化配置，在此列举一些常用的调优配置。&lt;/p&gt;
&lt;h2 id=&quot;运行环境&quot;&gt;&lt;a href=&quot;#运行环境&quot; class=&quot;headerlink&quot; title
    
    </summary>
    
      <category term="软件" scheme="https://brenthub.github.io/categories/%E8%BD%AF%E4%BB%B6/"/>
    
    
      <category term="PLSQL" scheme="https://brenthub.github.io/tags/PLSQL/"/>
    
      <category term="Oracle" scheme="https://brenthub.github.io/tags/Oracle/"/>
    
      <category term="数据库" scheme="https://brenthub.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>UTF-8，GBK互转之后为什么乱码</title>
    <link href="https://brenthub.github.io/2016/07/27/utf8-gbk-transfer/"/>
    <id>https://brenthub.github.io/2016/07/27/utf8-gbk-transfer/</id>
    <published>2016-07-27T01:03:15.000Z</published>
    <updated>2016-12-07T05:19:02.961Z</updated>
    
    <content type="html"><![CDATA[<p>在开发过程中，我们会遇到UTF-8跟GBK互转的时候，当中文字符为偶数时一般没有问题，但为奇数时互转之后最后一个字会出现乱码，为此，我们来看下到底是为什么。</p>
<p>单元测试类如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test2</span><span class="params">()</span> <span class="keyword">throws</span> UnsupportedEncodingException</span>&#123;</div><div class="line">	String s = <span class="string">"中国字"</span>;</div><div class="line">	</div><div class="line">	s=<span class="keyword">new</span> String(s.getBytes(),<span class="string">"UTF-8"</span>);</div><div class="line">	System.out.println(<span class="string">"UTF8:"</span>+s);</div><div class="line">	print(s.getBytes(<span class="string">"UTF-8"</span>));</div><div class="line">	</div><div class="line">	s=<span class="keyword">new</span> String(s.getBytes(<span class="string">"UTF-8"</span>),<span class="string">"GBK"</span>);</div><div class="line">	System.out.println(<span class="string">"GBK:"</span>+s);</div><div class="line">    <span class="comment">//GBK编码是偶数位编码，当为奇数时，最后一位标为不识别使用符号?代替对应ASCII代码就是63</span></div><div class="line">	print(s.getBytes(<span class="string">"GBK"</span>));</div><div class="line">	</div><div class="line">	s=<span class="keyword">new</span> String(s.getBytes(<span class="string">"GBK"</span>),<span class="string">"UTF-8"</span>);</div><div class="line">	System.out.println(<span class="string">"UTF8:"</span>+s);</div><div class="line">	print(s.getBytes(<span class="string">"UTF-8"</span>));</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">byte</span>[] bs)</span></span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">byte</span> b:bs)&#123;</div><div class="line">		System.out.print(b+<span class="string">" "</span>);</div><div class="line">	&#125;</div><div class="line">	System.out.println(<span class="string">"\n"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>打印如下：<br><img src="https://cloud.githubusercontent.com/assets/10822807/17161061/b0f75756-53dc-11e6-8204-d2340018e89a.png" alt="image"></p>
<h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><p>就像测试类注释里写的GBK编码是偶数位编码，当byte数组为奇数时的UTF-8转成GBK时，最后一位标为不识别使用符号?代替对应ASCII代码就是63，再转回UTF-8时就会出现最后一位是乱码了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在开发过程中，我们会遇到UTF-8跟GBK互转的时候，当中文字符为偶数时一般没有问题，但为奇数时互转之后最后一个字会出现乱码，为此，我们来看下到底是为什么。&lt;/p&gt;
&lt;p&gt;单元测试类如下：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;
    
    </summary>
    
      <category term="java" scheme="https://brenthub.github.io/categories/java/"/>
    
    
      <category term="java" scheme="https://brenthub.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Nginx搭建软件下载中心</title>
    <link href="https://brenthub.github.io/2016/07/26/nginx-soft-download/"/>
    <id>https://brenthub.github.io/2016/07/26/nginx-soft-download/</id>
    <published>2016-07-26T10:03:15.000Z</published>
    <updated>2016-12-07T05:19:02.961Z</updated>
    
    <content type="html"><![CDATA[<p>本章将利用nginx的目录浏览功能(autoindex)来搭建下载服务器（Nginx不像apache默认是打开目录浏览功能，需要手动开启）</p>
<h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><ul>
<li>安装Nginx(略)</li>
</ul>
<h2 id="fancyindex美化index"><a href="#fancyindex美化index" class="headerlink" title="fancyindex美化index"></a>fancyindex美化index</h2><ul>
<li><p>进入Nginx编译目录</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd /usr/local/nginx-1.10.1/</div></pre></td></tr></table></figure>
</li>
<li><p>下载fancyindex</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget https://github.com/aperezdc/ngx-fancyindex/archive/master.zip</div></pre></td></tr></table></figure>
</li>
<li><p>解压</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">unzip master.zip</div></pre></td></tr></table></figure>
</li>
</ul>
<p>解压后的目录为：ngx-fancyindex-master</p>
<ul>
<li>编译nginx<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">./configure  --with-http_stub_status_module  --with-http_ssl_module --with-stream --add-module=./ngx-fancyindex-master/</div><div class="line">make &amp;&amp; make install</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><ul>
<li>配置nginx代理<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi /usr/local/nginx/conf/http.d/soft.xxx.dev</div></pre></td></tr></table></figure>
</li>
</ul>
<p>粘贴并修改以下内容<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">        listen          80;</div><div class="line">        server_name     soft.xxx.dev;</div><div class="line"></div><div class="line">        error_log   logs/soft.xxx.dev.error.log;</div><div class="line"></div><div class="line">        keepalive_timeout    60;  </div><div class="line"></div><div class="line">        fancyindex on;</div><div class="line">        fancyindex_exact_size off;</div><div class="line">        fancyindex_localtime on;</div><div class="line">        fancyindex_footer /.footer.html;</div><div class="line">        fancyindex_header /.header.html;</div><div class="line">                                                 </div><div class="line">        root    /home/soft;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<ul>
<li>配置页头和页脚<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mkdir /home/soft</div><div class="line">cd /home/soft</div><div class="line">vi .header.html</div></pre></td></tr></table></figure>
</li>
</ul>
<p>粘贴并修改以下内容<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/1999/xhtml"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"content-type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=utf-8"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">media</span>=<span class="string">"screen"</span>&gt;</span><span class="undefined"></span></div><div class="line">body,html &#123;background:#fff;font-family: "Lucida Grande",Calibri,Arial;font-size: 13pt;color: #333;background: #f8f8f8;&#125;</div><div class="line">tr.e &#123;background:#f4f4f4;&#125;</div><div class="line">th,td &#123;padding:0.1em 0.5em;&#125;</div><div class="line">th &#123;text-align:left;font-weight:bold;background:#eee;border-bottom:1px solid #aaa;&#125;</div><div class="line">#top1 &#123;width:80%; font-size:28px; margin: 0 auto 5px auto;&#125;</div><div class="line">#top2 &#123;width:80%; font-size:18px; margin: 0 auto 5px auto;&#125;</div><div class="line">#footer &#123;width:80%;margin: 0 auto; padding: 10pt 0;font-size: 10pt;text-align:center;&#125;</div><div class="line">#footer a &#123;font-size: 14px; font-weight: normal; text-decoration: underline;&#125;</div><div class="line">#list &#123;border:1px solid #aaa;width:80%;margin: 0 auto;padding: 0;&#125;</div><div class="line">a &#123;color: #b00;font-size: 11pt;font-weight: bold;text-decoration: none;&#125;</div><div class="line">a:hover &#123;color: #000;&#125;</div><div class="line">#readme &#123;padding:0;margin:1em 0;border:none;width:100%;&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="xml">// &lt;![CDATA[function ngx_onload()&#123;var f=document.getElementById('readme');if(!(f&amp;&amp;f.contentDocument))return;f.style.height=f.contentDocument.body.offsetHeight+'px';f.contentDocument.body.style.padding='0';f.contentDocument.body.style.margin='0';&#125;// ]]&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>XXX研发软件下载中心<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">onload</span>=<span class="string">"ngx_onload()"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">"top1"</span>&gt;</span>XXX研发软件下载中心<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">"top2"</span>&gt;</span>Directory listing of</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi .footer.html</div></pre></td></tr></table></figure>
<p>粘贴并修改以下内容</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">id</span>=<span class="string">"footer"</span> <span class="attr">cellpadding</span>=<span class="string">"0"</span> <span class="attr">cellspacing</span>=<span class="string">"1"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">thead</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"3"</span>&gt;</span>本页面由XXX提供技术支持（有需要上传到上载目录，请联系XXX）<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">thead</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="重启nginx"><a href="#重启nginx" class="headerlink" title="重启nginx"></a>重启nginx</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">/usr/local/nginx/sbin/nginx -s stop</div><div class="line">/usr/local/nginx/sbin/nginx</div></pre></td></tr></table></figure>
<p>注意：/usr/local/nginx/sbin/nginx -s reload 这样重启不好使，我在这里被坑了一把</p>
<h2 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h2><p><img src="https://cloud.githubusercontent.com/assets/10822807/17135256/5a90857a-5361-11e6-956b-70514cefd19a.png" alt="image"></p>
<h2 id="参数解释"><a href="#参数解释" class="headerlink" title="参数解释"></a>参数解释</h2><ul>
<li>参见源码<a href="https://github.com/aperezdc/ngx-fancyindex" target="_blank" rel="external">https://github.com/aperezdc/ngx-fancyindex</a> README</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本章将利用nginx的目录浏览功能(autoindex)来搭建下载服务器（Nginx不像apache默认是打开目录浏览功能，需要手动开启）&lt;/p&gt;
&lt;h2 id=&quot;环境准备&quot;&gt;&lt;a href=&quot;#环境准备&quot; class=&quot;headerlink&quot; title=&quot;环境准备&quot;&gt;&lt;
    
    </summary>
    
      <category term="server" scheme="https://brenthub.github.io/categories/server/"/>
    
    
      <category term="nginx" scheme="https://brenthub.github.io/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>程序员也是手艺人</title>
    <link href="https://brenthub.github.io/2016/07/26/programmer-craftsman/"/>
    <id>https://brenthub.github.io/2016/07/26/programmer-craftsman/</id>
    <published>2016-07-26T03:03:15.000Z</published>
    <updated>2016-12-07T05:19:02.961Z</updated>
    
    <content type="html"><![CDATA[<p>之前看过一个广告短片，读白是这样的：</p>
<p><strong>致匠心-李宗盛</strong></p>
<p>人生很多事急不得，你得等它自己熟<br>我20出头入行，30年写了不到300首歌<br>当然算是量少的<br>我想<br>一个人有多少天份，跟他出什么样的作品<br>并无太大关联<br>天分我还是有的<br>我有能耐住性子的天份<br>人不能孤独的活着<br>之所以有作品，是为了沟通<br>透过作品去告诉人家心里的想法<br>眼中看世界的样子<br>所在意的，珍惜的<br>所以，作品就是自己<br>所有精工制作的对象<br>最珍贵，不能替代的就只有一个字 人<br>人有情怀，有信念，有态度<br>所以，没有理所当然<br>就是要在各种变量可能之中<br>仍然做到最好</p>
<p>世界再吵杂<br>匠人的内心绝对必须是安静安定的<br>面对大自然赠与的素材<br>我得先成就它<br>它才有可能成就我<br>我知道<br>手艺人往往意味着<br>固执，缓慢，少量，劳作<br>但是这些背后所隐含的是<br>专注，技艺，对完美的追求<br>所以<br>我们宁愿这样，也必须这样，也一直这样<br>为什么<br>我们要保留我们最珍贵的，最引以为傲的<br>一辈子，总是还得让一些善意执念推着往前<br>我们因此能愿意去听从内心的安排<br>专注做点东西，至少对得起光阴岁月<br>其他的就留给时间去说吧</p>
<p>其实，我只是想说：其实，程序员也是手艺人！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前看过一个广告短片，读白是这样的：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;致匠心-李宗盛&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;人生很多事急不得，你得等它自己熟&lt;br&gt;我20出头入行，30年写了不到300首歌&lt;br&gt;当然算是量少的&lt;br&gt;我想&lt;br&gt;一个人有多少天份，跟他出什么样的作品
    
    </summary>
    
      <category term="随笔" scheme="https://brenthub.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="https://brenthub.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>HttpsURLConnectionOldImpl cannot be cast to javax.net.ssl.HttpsURLConnection解决方案</title>
    <link href="https://brenthub.github.io/2016/07/26/httpsurlconnection-cast-error/"/>
    <id>https://brenthub.github.io/2016/07/26/httpsurlconnection-cast-error/</id>
    <published>2016-07-26T01:03:15.000Z</published>
    <updated>2016-12-07T05:19:02.946Z</updated>
    
    <content type="html"><![CDATA[<p>在用httpClient过程中，发现抛出以下异常<br>HttpsURLConnectionOldImpl cannot be cast to javax.net.ssl.HttpsURLConnection</p>
<h2 id="解决方案一"><a href="#解决方案一" class="headerlink" title="解决方案一"></a>解决方案一</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">try</span>&#123;</div><div class="line">	String handler =<span class="string">"sun.net.www.protocol"</span>;</div><div class="line">	<span class="keyword">if</span> (StringUtils.isNotEmpty(System.getProperty(<span class="string">"java.protocol.handler.pkgs"</span>))) &#123;</div><div class="line">		handler = handler + <span class="string">"|"</span> + System.getProperty(<span class="string">"java.protocol.handler.pkgs"</span>);</div><div class="line">	&#125;</div><div class="line">	System.setProperty(<span class="string">"java.protocol.handler.pkgs"</span>, handler);</div><div class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">	e.printStackTrace();</div><div class="line">&#125;</div><div class="line">URL u = <span class="keyword">new</span> URL(<span class="string">"https://www.baidu.com"</span>);</div><div class="line">HttpsURLConnection conn = (HttpsURLConnection)u.openConnection();</div></pre></td></tr></table></figure>
<h2 id="解决方案二"><a href="#解决方案二" class="headerlink" title="解决方案二"></a>解决方案二</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">URL u = <span class="keyword">new</span> URL(<span class="keyword">null</span>, <span class="string">"https://www.baidu.com"</span>, <span class="keyword">new</span> sun.net.www.protocol.https.Handler());</div><div class="line">HttpsURLConnection conn = (HttpsURLConnection)u.openConnection();</div></pre></td></tr></table></figure>
<h2 id="解决方法三"><a href="#解决方法三" class="headerlink" title="解决方法三"></a>解决方法三</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">URL.setURLStreamHandlerFactory(<span class="keyword">new</span> URLStreamHandlerFactory() &#123;</div><div class="line">	<span class="meta">@Override</span></div><div class="line">	<span class="function"><span class="keyword">public</span> URLStreamHandler <span class="title">createURLStreamHandler</span><span class="params">(String protocol)</span> </span>&#123;</div><div class="line">		<span class="keyword">try</span> &#123;</div><div class="line">			String clsName = <span class="string">"sun.net.www.protocol"</span> + <span class="string">"."</span> + protocol + <span class="string">".Handler"</span>;</div><div class="line">			Class cls = <span class="keyword">null</span>;</div><div class="line">			<span class="keyword">try</span> &#123;</div><div class="line">				cls = Class.forName(clsName);</div><div class="line">			&#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</div><div class="line">				ClassLoader cl = ClassLoader.getSystemClassLoader();</div><div class="line">				<span class="keyword">if</span> (cl != <span class="keyword">null</span>) &#123;</div><div class="line">					cls = cl.loadClass(clsName);</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span> (cls != <span class="keyword">null</span>) &#123;</div><div class="line">				<span class="keyword">return</span> (URLStreamHandler) cls.newInstance();</div><div class="line">			&#125;</div><div class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">			e.printStackTrace();</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">	&#125;</div><div class="line">&#125;);</div><div class="line">URL u = <span class="keyword">new</span> URL(<span class="string">"https://www.baidu.com"</span>);</div><div class="line">HttpsURLConnection conn = (HttpsURLConnection)u.openConnection();</div></pre></td></tr></table></figure>
<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>源码分析如下：<br><img src="https://cloud.githubusercontent.com/assets/10822807/17124022/a44a5ee4-531a-11e6-904e-fcdb1da1b542.png" alt="image"><br>java.protocol.handler.pkgs 环境变量中，以|号分隔，靠前的位置优先查找，直到找到为止。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在用httpClient过程中，发现抛出以下异常&lt;br&gt;HttpsURLConnectionOldImpl cannot be cast to javax.net.ssl.HttpsURLConnection&lt;/p&gt;
&lt;h2 id=&quot;解决方案一&quot;&gt;&lt;a href=&quot;#解决方
    
    </summary>
    
      <category term="java" scheme="https://brenthub.github.io/categories/java/"/>
    
    
      <category term="java" scheme="https://brenthub.github.io/tags/java/"/>
    
      <category term="httpClient" scheme="https://brenthub.github.io/tags/httpClient/"/>
    
  </entry>
  
  <entry>
    <title>Hadoop认识</title>
    <link href="https://brenthub.github.io/2016/07/25/hadoop-info/"/>
    <id>https://brenthub.github.io/2016/07/25/hadoop-info/</id>
    <published>2016-07-25T09:03:15.000Z</published>
    <updated>2016-12-07T05:19:02.946Z</updated>
    
    <content type="html"><![CDATA[<p>Hadoop是一个由Apache基金会所开发的分布式系统基础架构，在此先整体介绍一下它的三大组成部分。</p>
<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><h3 id="HDFS"><a href="#HDFS" class="headerlink" title="HDFS"></a>HDFS</h3><p>HDFS（Hadoop Distributed File System，Hadoop分布式文件系统），它是一个高度容错性的系统，适合部署在廉价的机器上。HDFS能提供高吞吐量的数据访问，适合那些有着超大数据集（large data set）的应用程序。</p>
<p>HDFS的设计特点是：<br>1、大数据文件，非常适合上T级别的大文件或者一堆大数据文件的存储，如果文件只有几个G甚至更小就没啥意思了。<br>2、文件分块存储，HDFS会将一个完整的大文件平均分块存储到不同计算器上，它的意义在于读取文件时可以同时从多个主机取不同区块的文件，多主机读取比单主机读取效率要高得多得都。<br>3、流式数据访问，一次写入多次读写，这种模式跟传统文件不同，它不支持动态改变文件内容，而是要求让文件一次写入就不做变化，要变化也只能在文件末添加内容。<br>4、廉价硬件，HDFS可以应用在普通PC机上，这种机制能够让给一些公司用几十台廉价的计算机就可以撑起一个大数据集群。<br>5、硬件故障，HDFS认为所有计算机都可能会出问题，为了防止某个主机失效读取不到该主机的块文件，它将同一个文件块副本分配到其它某几个主机上，如果其中一台主机失效，可以迅速找另一块副本取文件。</p>
<p>HDFS的关键元素：<br>Block：将一个文件进行分块，通常是64M。<br>NameNode：保存整个文件系统的目录信息、文件信息及分块信息，这是由唯一一台主机专门保存，当然这台主机如果出错，NameNode就失效了。在Hadoop2.*开始支持activity-standy模式—-如果主NameNode失效，启动备用主机运行NameNode。<br>DataNode：分布在廉价的计算机上，用于存储Block块文件。</p>
<h3 id="MapReduce"><a href="#MapReduce" class="headerlink" title="MapReduce"></a>MapReduce</h3><p>通俗说MapReduce是一套从海量·源数据提取分析元素最后返回结果集的编程模型，将文件分布式存储到硬盘是第一步，而从海量数据中提取分析我们需要的内容就是MapReduce做的事了。<br>下面以一个计算海量数据最大值为例：一个银行有上亿储户，银行希望找到存储金额最高的金额是多少，按照传统的计算方式，如果计算的数组长度少的话，这样实现是不会有问题的，还是面对海量数据的时候就会有问题。<br>MapReduce会这样做：首先数字是分布存储在不同块中的，以某几个块为一个Map，计算出Map中最大的值，然后将每个Map中的最大值做Reduce操作，Reduce再取最大值给用户。</p>
<p>MapReduce的基本原理就是：将大的数据分析分成小块逐个分析，最后再将提取出来的数据汇总分析，最终获得我们想要的内容。当然怎么分块分析，怎么做Reduce操作非常复杂，Hadoop已经提供了数据分析的实现，我们只需要编写简单的需求命令即可达成我们想要的数据。</p>
<h3 id="Yarn"><a href="#Yarn" class="headerlink" title="Yarn"></a>Yarn</h3><p>Yarn是一种新的 Hadoop 资源管理器，它是一个通用资源管理系统，可为上层应用提供统一的资源管理和调度，它的引入为集群在利用率、资源统一管理和数据共享等方面带来了巨大好处。</p>
<p>YARN最初是为了修复MapReduce实现里的明显不足，并对可伸缩性（支持一万个节点和二十万个内核的集群）、可靠性和集群利用率进行了提升。YARN实现这些需求的方式是，把Job Tracker的两个主要功能（资源管理和作业调度/监控）分成了两个独立的服务程序——全局的资源管理（RM）和针对每个应用的应用 Master（AM），这里说的应用要么是传统意义上的MapReduce任务，要么是任务的有向无环图（DAG）。</p>
<p>YARN从某种那个意义上来说应该算做是一个云操作系统，它负责集群的资源管理。在操作系统之上可以开发各类的应用程序，例如批处理MapReduce、流式作业Storm以及实时型服务Storm等。这些应用可以同时利用Hadoop集群的计算能力和丰富的数据存储模型，共享同一个Hadoop 集群和驻留在集群上的数据。此外，这些新的框架还可以利用YARN的资源管理器，提供新的应用管理器实现。</p>
<p>ResourceManager 是基于应用程序对资源的需求进行调度的 ; 每一个应用程序需要不同类型的资源因此就需要不同的容器。资源包括：内存，CPU，磁盘，网络等等。可以看出，这同现 Mapreduce 固定类型的资源使用模型有显著区别，它给集群的使用带来负面的影响。资源管理器提供一个调度策略的插件，它负责将集群资源分配给多个队列和应用程序。调度插件可以基于现有的能力调度和公平调度模型。<br>上图中 NodeManager 是每一台机器框架的代理，是执行应用程序的容器，监控应用程序的资源使用情况 (CPU，内存，硬盘，网络 ) 并且向调度器汇报。<br>每一个应用的 ApplicationMaster 的职责有：向调度器索要适当的资源容器，运行任务，跟踪应用程序的状态和监控它们的进程，处理任务的失败原因。</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>总的来说Hadoop适合应用于大数据存储和大数据分析的应用，适合于服务器几千台到几万台的集群运行，支持PB级的存储容量。<br>Hadoop典型应用有：搜索、日志处理、推荐系统、数据分析、视频图像分析、数据保存等。<br>但要知道，Hadoop的使用范围远小于SQL或Python之类的脚本语言，所以不要盲目使用Hadoop</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Hadoop是一个由Apache基金会所开发的分布式系统基础架构，在此先整体介绍一下它的三大组成部分。&lt;/p&gt;
&lt;h2 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h2&gt;&lt;h3 id=&quot;HDFS&quot;&gt;
    
    </summary>
    
      <category term="hadoop" scheme="https://brenthub.github.io/categories/hadoop/"/>
    
    
      <category term="hadoop" scheme="https://brenthub.github.io/tags/hadoop/"/>
    
  </entry>
  
  <entry>
    <title>正则表达式概念</title>
    <link href="https://brenthub.github.io/2016/07/25/regex-info/"/>
    <id>https://brenthub.github.io/2016/07/25/regex-info/</id>
    <published>2016-07-25T08:03:15.000Z</published>
    <updated>2016-12-07T05:19:02.961Z</updated>
    
    <content type="html"><![CDATA[<p>正则表达式是对字符串操作的一种逻辑公式，就是用事先定义好的一些特定字符、及这些特定字符的组合，组成一个“规则字符串”，这个“规则字符串”用来表达对字符串的一种过滤逻辑。<br>给定一个正则表达式和另一个字符串，我们可以达到如下的目的：</p>
<ol>
<li>给定的字符串是否符合正则表达式的过滤逻辑（称作“匹配”）；</li>
<li>可以通过正则表达式，从字符串中获取我们想要的特定部分。<br>正则表达式的特点是：</li>
<li>灵活性、逻辑性和功能性非常的强；</li>
<li>可以迅速地用极简单的方式达到字符串的复杂控制。</li>
<li>对于刚接触的人来说，比较晦涩难懂。<br>由于正则表达式主要应用对象是文本，因此它在各种文本编辑器场合都有应用，小到著名编辑器EditPlus，大到Microsoft Word、Visual Studio等大型编辑器，都可以使用正则表达式来处理文本内容。</li>
</ol>
<h2 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h2><h3 id="元字符"><a href="#元字符" class="headerlink" title="元字符"></a>元字符</h3><table>
<thead>
<tr>
<th>语法</th>
<th>说明 </th>
</tr>
</thead>
<tbody>
<tr>
<td>.</td>
<td>匹配除换行符以外的任意字符</td>
</tr>
<tr>
<td>\w</td>
<td>匹配字母或数字或下划线或汉字</td>
</tr>
<tr>
<td>\s</td>
<td>匹配任意的空白符</td>
</tr>
<tr>
<td>\d</td>
<td>匹配数字</td>
</tr>
<tr>
<td>\b</td>
<td>匹配单词的开始或结束</td>
</tr>
<tr>
<td>^</td>
<td>匹配字符串的开始</td>
</tr>
<tr>
<td>$</td>
<td>匹配字符串的结束</td>
</tr>
</tbody>
</table>
<h3 id="反义"><a href="#反义" class="headerlink" title="反义"></a>反义</h3><table>
<thead>
<tr>
<th>语法</th>
<th>说明 </th>
</tr>
</thead>
<tbody>
<tr>
<td>\W</td>
<td>匹配任意不是字母，数字，下划线，汉字的字符</td>
</tr>
<tr>
<td>\S</td>
<td>匹配任意不是空白符的字符</td>
</tr>
<tr>
<td>\D</td>
<td>匹配任意非数字的字符</td>
</tr>
<tr>
<td>\B</td>
<td>匹配不是单词开头或结束的位置</td>
</tr>
<tr>
<td>[^x]</td>
<td>匹配除了x以外的任意字符</td>
</tr>
<tr>
<td>[^aeiou]</td>
<td>匹配除了aeiou这几个字母以外的任意字符</td>
</tr>
</tbody>
</table>
<h3 id="重复"><a href="#重复" class="headerlink" title="重复"></a>重复</h3><table>
<thead>
<tr>
<th>语法</th>
<th>说明 </th>
</tr>
</thead>
<tbody>
<tr>
<td>*</td>
<td>重复零次或更多次</td>
</tr>
<tr>
<td>+</td>
<td>重复一次或更多次</td>
</tr>
<tr>
<td>?</td>
<td>重复零次或一次</td>
</tr>
<tr>
<td>{n}</td>
<td>重复n次</td>
</tr>
<tr>
<td>{n,}</td>
<td>重复n次或更多次</td>
</tr>
<tr>
<td>{n,m}</td>
<td>重复n到m次</td>
</tr>
</tbody>
</table>
<h3 id="方括号集合"><a href="#方括号集合" class="headerlink" title="方括号集合"></a>方括号集合</h3><p>如[aeiou]就匹配任何一个英文元音字母，[.?!]匹配标点符号(.或?或!)<br>如[0-9]代表的含意与\d就是完全一致的：一位数字；同理[a-z0-9A-Z_]也完全等同于\w</p>
<h3 id="分支条件"><a href="#分支条件" class="headerlink" title="分支条件"></a>分支条件</h3><p>正则表达式里的分支条件指的是有几种规则，如果满足其中任意一种规则都应该当成匹配，具体方法是用|把不同的规则分隔开。<br>如：0\d{2}-\d{8}|0\d{3}-\d{7}这个表达式能匹配两种以连字号分隔的电话号码：一种是三位区号，8位本地号(如010-12345678)，一种是4位区号，7位本地号(0376-2233445)。</p>
<h3 id="分组"><a href="#分组" class="headerlink" title="分组"></a>分组</h3><p>正则可以用小括号来指定子表达式(也叫做分组)<br>如用正则表达式(\d{3}).(\w{3})来匹配123.abc<br>分组之后：<br>$0来代表整个匹配如123.abc<br>$1来代表第1个括号的匹配如123<br>$2来代表第2个括号的匹配如abc</p>
<p>如果要将分组匹配的内容在后面的表达用\编号和代替<br>如：用(\w+)\s+\1 来匹配重复的单词如go go</p>
<h3 id="后向引用"><a href="#后向引用" class="headerlink" title="后向引用"></a>后向引用</h3><table>
<thead>
<tr>
<th>分类</th>
<th>语法</th>
<th>说明 </th>
</tr>
</thead>
<tbody>
<tr>
<td>捕获</td>
<td>(exp)</td>
<td>匹配exp,并捕获文本到自动命名的组里</td>
</tr>
<tr>
<td>捕获</td>
<td>(?<name>exp)</name></td>
<td>匹配exp,并捕获文本到名称为name的组里，也可以写成(?’name’exp)</td>
</tr>
<tr>
<td>捕获</td>
<td>(?:exp)</td>
<td>匹配exp,不捕获匹配的文本，也不给此分组分配组号</td>
</tr>
<tr>
<td>零宽断言</td>
<td>(?=exp)</td>
<td>匹配exp前面的位置</td>
</tr>
<tr>
<td>零宽断言</td>
<td>(?&lt;=exp)</td>
<td>匹配exp后面的位置</td>
</tr>
<tr>
<td>零宽断言</td>
<td>(?!exp)</td>
<td>匹配后面跟的不是exp的位置</td>
</tr>
<tr>
<td>零宽断言</td>
<td>(?&lt;!exp)</td>
<td>匹配前面不是exp的位置</td>
</tr>
<tr>
<td>注释</td>
<td>(?#comment)</td>
<td>这种类型的分组不对正则表达式的处理产生任何影响，用于提供注释让人阅读</td>
</tr>
</tbody>
</table>
<h2 id="举个栗子"><a href="#举个栗子" class="headerlink" title="举个栗子"></a>举个栗子</h2><h3 id="正则表达式截取字符串"><a href="#正则表达式截取字符串" class="headerlink" title="正则表达式截取字符串"></a>正则表达式截取字符串</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">String str = <span class="string">" 101  @achi  200  @a低碳阴谋：中国与欧美的生死之战@ADI TAN LIN MOU@f勾红洋著  210  @a太原@c山西经济出版社  690  @aX511@v4"</span>; </div><div class="line">String regex = <span class="string">"(?&lt;= )([.]*)(?= \\d&#123;3&#125;)"</span>; </div><div class="line">String[] strs = str.split(regex); </div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; strs. length; i++) &#123; </div><div class="line">    System. out.printf( <span class="string">"%s%n"</span>, strs[i]); </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>打印结果为：<br> 101  @achi<br> 200  @a低碳阴谋：中国与欧美的生死之战@ADI TAN LIN MOU@f勾红洋著<br> 210  @a太原@c山西经济出版社<br> 690  @aX511@v4</p>
<h3 id="正则截图根host"><a href="#正则截图根host" class="headerlink" title="正则截图根host"></a>正则截图根host</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">String host=<span class="string">"mms.dinpay.loc"</span>;</div><div class="line">String host2=<span class="string">"dinpay.loc"</span>;</div><div class="line">String host3=<span class="string">"eee.rr.dinpay.loc"</span>;</div><div class="line">String host4=<span class="string">".dinpay.loc"</span>;</div><div class="line">Pattern p=Pattern.compile(<span class="string">"\\.?(\\w+\\.\\w+)$"</span>);</div><div class="line">Matcher m=p.matcher(host4);</div><div class="line"><span class="keyword">if</span>(m.find())&#123;</div><div class="line">    host=m.group(<span class="number">1</span>);</div><div class="line">&#125;</div><div class="line">System.out.println(host);</div></pre></td></tr></table></figure>
<p>匹配结果为dinpay.loc</p>
<h3 id="正则获取host"><a href="#正则获取host" class="headerlink" title="正则获取host"></a>正则获取host</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">String reg=<span class="string">"(?&lt;=^).*\\.(?=\\w+\\.((com(\\.cn)?)|(?&lt;!com\\.)cn|net)$)"</span>;</div><div class="line">System.out.println(<span class="string">"5.aaa.com"</span>.replaceAll(reg, <span class="string">""</span>));</div><div class="line">System.out.println(<span class="string">"a.b.ccc.com"</span>.replaceAll(reg, <span class="string">""</span>));</div><div class="line">System.out.println(<span class="string">"567.com.cn"</span>.replaceAll(reg, <span class="string">""</span>));</div><div class="line">System.out.println(<span class="string">"youku.net"</span>.replaceAll(reg, <span class="string">""</span>));</div><div class="line">System.out.println(<span class="string">"youku.cn"</span>.replaceAll(reg, <span class="string">""</span>));</div><div class="line">System.out.println(<span class="string">"555.youku.cn"</span>.replaceAll(reg, <span class="string">""</span>));</div><div class="line">System.out.println(<span class="string">"11.youku.net"</span>.replaceAll(reg, <span class="string">""</span>));</div></pre></td></tr></table></figure>
<p>打印结果为：<br>aaa.com<br>ccc.com<br>567.com.cn<br>youku.net<br>youku.cn<br>youku.cn<br>youku.net  </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;正则表达式是对字符串操作的一种逻辑公式，就是用事先定义好的一些特定字符、及这些特定字符的组合，组成一个“规则字符串”，这个“规则字符串”用来表达对字符串的一种过滤逻辑。&lt;br&gt;给定一个正则表达式和另一个字符串，我们可以达到如下的目的：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;给定的字符串
    
    </summary>
    
      <category term="regex" scheme="https://brenthub.github.io/categories/regex/"/>
    
    
      <category term="regex" scheme="https://brenthub.github.io/tags/regex/"/>
    
  </entry>
  
</feed>
